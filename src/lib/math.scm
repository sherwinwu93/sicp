(define (square x)
  (* x x))
(define (average x y)
  (/ (+ x y)
     2))
(define (average-three x y z)
  (/ (+ x y z)
     3))
(define (abs x)
  (if (>= x 0)
      x
      (- x)))
(define (even? n)
  (= (remainder n 2) 0))
(even? 99)
(define (halve x)
  (/ x 2))
(define (double x)
  (* x 2))
(define (divides? a b)
  (= (remainder b a)
     0))
(define (cube x)
  (* x x x))
(define (gcd a b)
  (if (= b 0)
      a
      (gcd b (remainder a b))))
(define (negative? x)
  (< x 0))
(define (positive? x)
  (> x 0))
(define (prime? n)
  (= n (smallest-divisor n)))
(define (smallest-divisor n)
  (find-divisor n 2 ))
(define (find-divisor n test-divisor)
  (cond ((> (square test-divisor) n) n)
	((divides? test-divisor n) test-divisor)
	(else (find-divisor n (+ test-divisor 1)))))
(define (divides? a b)
  (= (remainder b a) 0))
(define (divisible? x y)
  (= (remainder x y) 0))
