(define (my-reverse list)
  (if (null? list)
      '()
      (cons (my-reverse (cdr list))
            (cons (car list) ()))))
;; deep-reverse,不单反转表,而且反转元素
(define x (list (list 1 2) (list 3 4)))
x
->((1 2) (3 4))
(reverse x)
->((3 4) (1 2))
(deep-reverse x)
((4 3) (2 1))
(define (deep-reverse x)
  (if (not (pair? x))
      x
      (cons (deep-reverse (cdr x))
            (deep-reverse (car x))
                  )))
(define (deep-reverse x)
  (cond ((not (pair? x)) x)
        ((null? (cdr x)) (deep-reverse (car x)))
        (else (cons (deep-reverse (cdr x))
              (cons (deep-reverse (car x))
                    ())))))
